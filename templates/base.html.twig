<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <script src="https://unpkg.com/feather-icons"></script>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
        
        <script src="https://cdn.tailwindcss.com"></script>
        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
        {% endblock %}

        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
        {% endblock %}
    </head>
    <body>
        <header class="header">
            <div class="header__content container mx-auto">
                <form method="GET" action="#" class="flex left-container items-center">
                    <a href="{{ path('front_default_index') }}">
                        <img class="logo max-md:hidden" src="{{ asset('build/icons/logo.svg') }}" alt="logo">
                        <img class="logo md:hidden lg:hidden xl:hidden" src="{{ asset('build/icons/logo-mobile.svg') }}" alt="logo">
                    </a>
                    <input name="search" type="text" class="search-bar w-full" value="{{ app.request.query.get('search') }}" placeholder="Que cherchez-vous ?">
                </form>

                <nav class="header-navigation space-x-5 max-md:hidden">
                    <a href=""><i data-feather="bookmark"></i></a>
                    <a href=""><i data-feather="settings"></i></a>
                    <a class="max-lg:hidden" href="{{ path('app_logout') }}">Se déconnecter</a>
                    <a class="max-md:hidden lg:hidden xl:hidden" href="{{ path('app_logout') }}"><i data-feather="log-out"></i></a>
                </nav>
            </div>
        </header>

        <header class="headerMobile max-md:block">
        <div class="headerMobile__content container mx-auto">
            <a class="headerMobile__icon {% if app.request.get('_route') == 'front_default_index' %}headerMobile__icon--active{% endif %}" href="{{ path('front_default_index') }}"><i data-feather="home"></i></a>
            <a class="headerMobile__icon" href=""><i data-feather="search"></i></a>
            <a class="headerMobile__icon" href=""><i data-feather="bookmark"></i></a>
            <a class="headerMobile__icon" href=""><i data-feather="settings"></i></a>
            <a class="headerMobile__icon" href="{{ path('app_logout') }}"><i data-feather="log-out"></i></a>
        </div>
            
        </header>

        <div class="container mx-auto">
            <main>
                {% block body %}{% endblock %}
            </main>
        </div>

        {% if notyf is defined %}
            <div id="notyf-message" class={{ notyf }}>{{ notyf }}</div>
        {% endif %}

        {%  include '/components/notyf.html.twig' %}
    </body>
    <footer>
    
    </footer>
    </body>
    <script>
        feather.replace()
        function notifyOffers(data) {
            console.log(data.offer);
            if (!("Notification" in window)) {
                // Check if the browser supports notifications
                alert("This browser does not support desktop notification");
            } else if (Notification.permission === "granted") {
                // Check whether notification permissions have already been granted;
                // if so, create a notification
                const options = {
                    vibrate: [200, 100, 200]
                }

                const notification = new Notification("Nouvelle offre !", {
                    body: data.offer,
                    tag: "simple-push-demo-notification",
                });
                notification.vibrate;

                // …
            } else if (Notification.permission !== "denied") {
                // We need to ask the user for permission
                Notification.requestPermission().then((permission) => {
                    // If the user accepts, let's create a notification
                    if (permission === "granted") {
                        const options = {
                            vibrate: [200, 100, 200]
                        }

                        const notification = new Notification("Nouvelle offre !", {
                            body: data.offer,
                            tag: "simple-push-demo-notification",
                        });
                        notification.vibrate;
                        // …
                    }
                });
            }
        }

        const eventSource = new EventSource("{{ mercure('http://localhost/books/1')|escape('js') }}");
        eventSource.onmessage = event => {
            // Will be called every time an update is published by the server

            notifyOffers(JSON.parse(event.data));
        }


    </script>
</html>
